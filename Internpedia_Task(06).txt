<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Unique To-Do List</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #000;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
        }

        .todo-container {
            background-color: #000;
            border-radius: 15px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.5);
            overflow: hidden;
            width: 400px;
            max-width: 90%;
            color: #fff;
        }

        .header {
            background: linear-gradient(to right, #ff00ff, #00ff00);
            color: #fff;
            padding: 20px;
            text-align: center;
            font-size: 24px;
            border-radius: 15px 15px 0 0;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.5);
        }

        .add-task {
            display: flex;
            align-items: center;
            padding: 10px 20px;
        }

        .add-task input[type="text"] {
            flex: 1;
            padding: 10px;
            border: none;
            border-bottom: 2px solid #ff00ff;
            outline: none;
            font-size: 16px;
            transition: border-bottom 0.3s;
            background-color: transparent;
            color: #fff;
        }

        .add-task input[type="text"]:focus {
            border-bottom: 2px solid #00ff00;
        }

        .add-task button {
            padding: 10px 20px;
            background-color: #ff00ff;
            color: #fff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s;
            font-size: 16px;
            margin-left: 10px;
        }

        .add-task button:hover {
            background-color: #00ff00;
        }

        .task-list {
            margin-bottom: 20px;
        }

        .task-item {
            background-color: #222;
            border-radius: 10px;
            padding: 15px;
            display: flex;
            align-items: center;
            justify-content: space-between;
            position: relative;
            overflow: hidden;
            transition: background-color 0.3s;
            margin-bottom: 10px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);
            cursor: pointer;
            border-left: 6px solid transparent;
        }

        .task-item:hover {
            background-color: #333;
        }

        .task-item.completed {
            background-color: #007700; /* Dark green for completed tasks */
            border-left-color: #00ff00; /* Neon green */
        }

        .task-item .task-text {
            flex: 1;
            margin-right: 10px;
        }

        .task-item i {
            cursor: pointer;
            transition: transform 0.3s;
            color: #ff00ff;
        }

        .task-item i:hover {
            transform: scale(1.2);
        }

        .task-count {
            text-align: center;
            color: #fff;
            margin-bottom: 10px;
            font-size: 14px;
            padding: 10px;
            border-radius: 15px;
            background: linear-gradient(to right, #ff00ff, #00ff00);
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.5);
        }

        /* Custom Animation */
        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        .fade-in {
            animation: fadeIn 0.5s ease-in-out;
        }

        /* Custom checkbox */
        .custom-checkbox {
            position: relative;
            cursor: pointer;
            display: inline-block;
            vertical-align: middle;
            margin-right: 10px;
        }

        .custom-checkbox input {
            position: absolute;
            opacity: 0;
            cursor: pointer;
            height: 0;
            width: 0;
        }

        .checkmark {
            position: absolute;
            top: 0;
            left: 0;
            height: 25px;
            width: 25px;
            background-color: #fff;
            border: 2px
 solid #ccc;
            border-radius: 4px;
        }

        .custom-checkbox input:checked ~ .checkmark:after {
            display: block;
        }

        .checkmark:after {
            content: "";
            position: absolute;
            display: none;
            left: 8px;
            top: 3px;
            width: 6px;
            height: 13px;
            border: solid #00ff00; /* Neon green */
            border-width: 0 3px 3px 0;
            transform: rotate(45deg);
        }

        /* Custom trash icon */
        .custom-trash-icon {
            color: #ff00ff;
            cursor: pointer;
            transition: transform 0.3s;
        }

        .custom-trash-icon:hover {
            transform: scale(1.2);
        }
    </style>
</head>
<body>
    <div class="todo-container fade-in">
        <div class="header">Unique To-Do List</div>
        <div class="add-task">
            <input type="text" id="taskInput" placeholder="Add a new task">
            <button onclick="addTask()">Add Task</button>
        </div>
        <div class="task-count" id="taskCount"></div>
        <div class="task-list">
            <h3>Pending Tasks</h3>
            <ul id="pendingTasks"></ul>
        </div>
        <div class="task-list">
            <h3>Completed Tasks</h3>
            <ul id="completedTasks"></ul>
        </div>
    </div>

    <script>
        let tasks = [];

        function addTask() {
            const taskInput = document.getElementById("taskInput");
            const taskText = taskInput.value.trim();
            if (taskText === "") return;

            const newTask = {
                id: Date.now(),
                text: taskText,
                completed: false
            };

            tasks.push(newTask);
            renderTasks();
            taskInput.value = "";
        }

        function toggleTaskCompletion(taskId) {
            const taskIndex = tasks.findIndex(task => task.id === taskId);
            if (taskIndex !== -1) {
                tasks[taskIndex].completed = !tasks[taskIndex].completed;
                renderTasks();
            }
        }

        function deleteTask(taskId) {
            tasks = tasks.filter(task => task.id !== taskId);
            renderTasks();
        }

        function renderTasks() {
            const pendingTasksList = document.getElementById("pendingTasks");
            const completedTasksList = document.getElementById("completedTasks");
            pendingTasksList.innerHTML = "";
            completedTasksList.innerHTML = "";

            let pendingCount = 0;
            let completedCount = 0;

            tasks.forEach(task => {
                const taskElement = document.createElement("li");
                taskElement.classList.add("task-item");
                if (task.completed) {
                    taskElement.classList.add("completed");
                    completedCount++;
                } else {
                    pendingCount++;
                }

                const taskText = document.createElement("span");
                taskText.classList.add("task-text");
                taskText.textContent = task.text;
                taskElement.appendChild(taskText);

                const deleteIcon = document.createElement("i");
                deleteIcon.className = "fas fa-trash-alt custom-trash-icon";
                deleteIcon.addEventListener("click", () => deleteTask(task.id));
                taskElement.appendChild(deleteIcon);

                const checkboxContainer = document.createElement("label");
                checkboxContainer.classList.add("custom-checkbox");
                const checkbox = document.createElement("input");
                checkbox.type = "checkbox";
                checkbox.checked = task.completed;
                checkbox.addEventListener("change", () => toggleTaskCompletion(task.id));
                const checkmark = document.createElement("span");
                checkmark.classList.add("checkmark");
                checkboxContainer.appendChild(checkbox);
                checkboxContainer.appendChild(checkmark);
                taskElement.appendChild(checkboxContainer);

                if (task.completed) {
                    completedTasksList.appendChild(taskElement);
                } else {
                    pendingTasksList.appendChild(taskElement);
                }
            });

            const taskCountElement = document.getElementById("taskCount");
            taskCountElement.innerHTML = `Pending Tasks: ${pendingCount} | Completed Tasks: ${completedCount}`;
        }

        // Initial rendering
        renderTasks();
    </script>
</body>
</html>
